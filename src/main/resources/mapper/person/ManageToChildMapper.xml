<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bonc.frame.web.mapper.person.ManageToChildMapper">
	<resultMap type="com.bonc.person.model.Child" id="BaseResultMap">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="studentnum" jdbcType="VARCHAR" property="studentnum" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="classed" jdbcType="VARCHAR" property="classed" />
	</resultMap>

	<sql id="Base_Column_List">
		id, studentnum, name,password,classed
	</sql>

	<select id="selectAll" parameterType="map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from p_child where 1=1
		<if test="name !=null and name != ''">
		AND name LIKE '%${name}%'
		</if>
	</select>

	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from p_child
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="selectByName" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from p_child
		where name = #{name,jdbcType=VARCHAR}
	</select>

	<select id="findAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from p_child WHERE 1=1
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		p_child
		where id = #{id,jdbcType=VARCHAR}
	</delete>

	<insert id="insert" parameterType="com.bonc.person.model.Child">
		insert into p_teacher
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="studentnum != null">
				studentnum,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="classed != null">
				classed,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="studentnum != null">
				#{stduentnum,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="classed != null">
				#{classed,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.bonc.person.model.Child">
		update p_child
		<set>
			<if test="studentnum != null">
				studentnum = #{studentnum,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="classed != null">
				classed = #{classed,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

</mapper>